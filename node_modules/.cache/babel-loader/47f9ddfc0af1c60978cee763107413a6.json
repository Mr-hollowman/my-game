{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyReact\\\\memory-game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\"\n}, {\n  \"src\": \"/img/potion-1.png\"\n}, {\n  \"src\": \"/img/ring-1.png\"\n}, // {\"src\":\"/img/scroll-1.png\"},\n{\n  \"src\": \"/img/helmet-1.png\"\n}, {\n  \"src\": \"/img/shield-1.png\"\n}, {\n  \"src\": \"/img/sword-1.png\"\n}];\nexport default function App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null); //handle choise\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        console.log(\"cards matched\");\n      }\n    }\n  }, [cardOne, cardTwo]);\n\n  const shuffleCards = () => {\n    const suffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(suffledCards);\n  };\n\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        handleChoice: handleChoice,\n        card: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UgYVv8xwO0vRPJh3/HlVWel7YNE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SingleCard","cardImages","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","handleChoice","card","resetTurn","prevTurns","src","console","log","cardOne","cardTwo","shuffleCards","suffledCards","sort","Math","random","map","id"],"sources":["D:/MyReact/memory-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css'\r\nimport SingleCard from './SingleCard';\r\n\r\nconst cardImages=[\r\n  {\"src\":\"/img/helmet-1.png\"},\r\n  {\"src\":\"/img/potion-1.png\"},\r\n  {\"src\":\"/img/ring-1.png\"},\r\n  // {\"src\":\"/img/scroll-1.png\"},\r\n  {\"src\":\"/img/helmet-1.png\"},\r\n  {\"src\":\"/img/shield-1.png\"},\r\n  {\"src\":\"/img/sword-1.png\"}\r\n]\r\nexport default function App() {\r\n\r\n  const [cards,setCards]=useState([]);\r\n  const [turns,setTurns]=useState(0);\r\n  const [choiceOne,setChoiceOne]=useState(null);\r\n  const [choiceTwo,setChoiceTwo]=useState(null);\r\n\r\n  //handle choise\r\n    const handleChoice=(card)=>{\r\n      choiceOne ?setChoiceTwo(card):setChoiceOne(card)\r\n    }\r\n\r\n    const resetTurn=()=>{\r\n      setChoiceOne(null);\r\n      setChoiceTwo(null);\r\n      setTurns((prevTurns)=>prevTurns+1)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(choiceOne && choiceTwo){\r\n        if(choiceOne.src===choiceTwo.src){\r\n          console.log(\"cards matched\");\r\n        }\r\n      }\r\n    },[cardOne,cardTwo])\r\n\r\n  const shuffleCards=()=>{\r\n    const suffledCards=[...cardImages,...cardImages]\r\n      .sort(()=>Math.random()-0.5)\r\n      .map((card)=>({...card,id:Math.random()}))\r\n      setCards(suffledCards)\r\n  }\r\n  console.log(cards,turns);\r\n  return (\r\n    <div className='App'>\r\n      <h1>Magic match</h1>\r\n      <button onClick={shuffleCards}>New Game</button>\r\n\r\n      <div className='card-grid'>\r\n        {cards.map(card=>(\r\n          <SingleCard  key={card.id} \r\n          handleChoice={handleChoice}\r\n           card={card}/>\r\n        ))}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAC,CACf;EAAC,OAAM;AAAP,CADe,EAEf;EAAC,OAAM;AAAP,CAFe,EAGf;EAAC,OAAM;AAAP,CAHe,EAIf;AACA;EAAC,OAAM;AAAP,CALe,EAMf;EAAC,OAAM;AAAP,CANe,EAOf;EAAC,OAAM;AAAP,CAPe,CAAjB;AASA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,CAAD,CAA/B;EACA,MAAM,CAACQ,SAAD,EAAWC,YAAX,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;EACA,MAAM,CAACU,SAAD,EAAWC,YAAX,IAAyBX,QAAQ,CAAC,IAAD,CAAvC,CAL4B,CAO5B;;EACE,MAAMY,YAAY,GAAEC,IAAD,IAAQ;IACzBL,SAAS,GAAEG,YAAY,CAACE,IAAD,CAAd,GAAqBJ,YAAY,CAACI,IAAD,CAA1C;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAC,MAAI;IAClBL,YAAY,CAAC,IAAD,CAAZ;IACAE,YAAY,CAAC,IAAD,CAAZ;IACAJ,QAAQ,CAAEQ,SAAD,IAAaA,SAAS,GAAC,CAAxB,CAAR;EACD,CAJD;;EAMAhB,SAAS,CAAC,MAAI;IACZ,IAAGS,SAAS,IAAIE,SAAhB,EAA0B;MACxB,IAAGF,SAAS,CAACQ,GAAV,KAAgBN,SAAS,CAACM,GAA7B,EAAiC;QAC/BC,OAAO,CAACC,GAAR,CAAY,eAAZ;MACD;IACF;EACF,CANQ,EAMP,CAACC,OAAD,EAASC,OAAT,CANO,CAAT;;EAQF,MAAMC,YAAY,GAAC,MAAI;IACrB,MAAMC,YAAY,GAAC,CAAC,GAAGpB,UAAJ,EAAe,GAAGA,UAAlB,EAChBqB,IADgB,CACX,MAAIC,IAAI,CAACC,MAAL,KAAc,GADP,EAEhBC,GAFgB,CAEXb,IAAD,KAAS,EAAC,GAAGA,IAAJ;MAASc,EAAE,EAACH,IAAI,CAACC,MAAL;IAAZ,CAAT,CAFY,CAAnB;IAGEpB,QAAQ,CAACiB,YAAD,CAAR;EACH,CALD;;EAMAL,OAAO,CAACC,GAAR,CAAYd,KAAZ,EAAkBE,KAAlB;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEe,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGjB,KAAK,CAACsB,GAAN,CAAUb,IAAI,iBACb,QAAC,UAAD;QACA,YAAY,EAAED,YADd;QAEC,IAAI,EAAEC;MAFP,GAAkBA,IAAI,CAACc,EAAvB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAhDuBxB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}